variables:
  STAGE_URL: "stage.design.imshealth.com"
  PROD_URL: "design.imshealth.com"
  CDN_URL: "cdn.ims.io/design"
  AUTH_DOCS: "AWS_ACCESS_KEY_ID=$AWS_ID_DOCS AWS_SECRET_ACCESS_KEY=$AWS_SECRET_DOCS"

stages:
  - build
  - deploy

build:
  image: ruby:2.4.1
  stage: build
  before_script:
    # Install Jekyll and Bundler gems
    - gem install jekyll bundler
    # Install Node
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    - apt-get install -y nodejs
    # Install Gulp globally and project dependencies locally
    - npm install -g gulp
    - npm install
  script: gulp
  # Make `dist` directory available to other jobs
  artifacts:
    paths:
      - dist/

deploy_stage:
  image: python:3.6
  stage: deploy
  environment:
    name: Staging
    url: http://$STAGE_URL
  # only:
  #   - development
  dependencies:
    # Gives this job access to the artifacts from `build` job
    - build
  before_script:
    # Install AWS Command Line Interface tools
    - pip install awscli
  # Variables stored in Gitlab (e.g. $AWS_ID_DOCS) for security
  script: $AUTH_DOCS aws s3 cp --recursive ./dist/ s3://$STAGE_URL/

deploy_prod:
  image: python:3.6
  stage: deploy
  environment:
    name: Production
    url: http://$PROD_URL
  only:
    - master
  dependencies:
    - build
  before_script:
    - pip install awscli
  script:
    >
      AWS_ACCESS_KEY_ID=$AWS_ID_DOCS
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_DOCS
      aws s3 cp --recursive ./dist/ s3://PROD_URL/

# deploy_cdn:
#   image: python:3.6
#   stage: deploy
#   only:
#     - tags
#   dependencies:
#     - build
#   before_script:
#     - pip install awscli
#   variables:
#     - CREDENTIALS: AWS_ACCESS_KEY_ID=$AWS_ID_CDN AWS_SECRET_ACCESS_KEY=$AWS_SECRET_CDN
#   script:
#     - $CREDENTIALS aws s3 cp --recursive ./dist/js/apollo*.js s3://CDN_URL/js/$CI_COMMIT_TAG
#     - $CREDENTIALS aws s3 cp --recursive ./dist/css/apollo*.js s3://CDN_URL/css/$CI_COMMIT_TAG

